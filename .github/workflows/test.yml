name: Tests

on:
  push:
    branches:
      - main
      - master
  pull_request:

permissions:
  contents: read

jobs:
  test:
    name: Run Tests
    strategy:
      matrix:
        go: ['1.24']
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run unit tests (with coverage)
        if: matrix.os == 'ubuntu-latest'
        run: go test -short -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Run unit tests
        if: matrix.os != 'ubuntu-latest'
        run: go test -short -race ./...

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          flags: unittests
          fail_ci_if_error: false

  integration-test:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Configure git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global commit.gpgsign false

      - name: Run integration tests
        run: go test -v ./test/integration/...

      - name: Run E2E tests
        run: go test -v ./test/e2e/...
