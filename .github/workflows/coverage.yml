name: Coverage

on:
  push:
    branches:
      - main
      - master
  pull_request:

permissions:
  contents: read

jobs:
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Configure git for tests
        run: |
          git config --global user.name "Coverage Bot"
          git config --global user.email "coverage@example.com"
          git config --global commit.gpgsign false

      - name: Run tests with coverage
        run: |
          go test -v -coverprofile=coverage.out -covermode=atomic ./...

      - name: Generate coverage report
        run: |
          go tool cover -func=coverage.out -o=coverage.txt
          go tool cover -html=coverage.out -o=coverage.html

      - name: Display coverage summary
        run: |
          echo "Coverage Summary:"
          cat coverage.txt
          echo ""
          TOTAL_COVERAGE=$(tail -1 coverage.txt | awk '{print $3}')
          echo "Total Coverage: $TOTAL_COVERAGE"

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.out
            coverage.txt
            coverage.html

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverage = fs.readFileSync('coverage.txt', 'utf8');
            const lines = coverage.split('\n').slice(-20); // Last 20 lines
            const body = '## Coverage Report\n\n```\n' + lines.join('\n') + '\n```';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

